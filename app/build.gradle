apply plugin: 'com.android.application'
Properties props = new Properties()
props.load(new FileInputStream(file("signing.properties")))
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.example.song.mvpdemo"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 15
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    signingConfigs {
        sign {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }
    }
    dataBinding{
        enabled=true
    }
//    flavorDimensions("api","song")
//    productFlavors{
//        yy{
//            dimension 'api'
//        }
//        demo{
//            dimension 'song'
//        }
//        full{
//            dimension 'song'
//        }
//
//    }
//    minApi24{
//        dimension 'api'
//        minSdkVersion '24'
//        versionCode 2000 +android.defaultConfig.versionCode
//        versionNameSuffix "-minApi24"
//    }
    buildTypes {
        debug {
//            minifyEnabled false
//            shrinkResources false
//            zipAlignEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
        release {
//            minifyEnabled true
//            shrinkResources true
//            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }
//    compileOptions{
//        sourceCompatibility = '1.8'
//        targetCompatibility ='1.8'
//    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api rootProject.ext.dependencies["appcompat_v7"]
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.meituan.android.walle:library:1.1.6'
    implementation 'com.google.dagger:dagger:2.13'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'
    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/zxing_3.3.0.jar')
    api project(':library')
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.8.0'
}
